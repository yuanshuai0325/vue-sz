<template>
  <el-container>
    <el-header>
      <header-bar></header-bar>
    </el-header>
    <el-aside></el-aside>
    <el-main>
      <el-row :gutter="20">
        <el-col :span="6" :offset="1">
          <el-switch
            v-model="value"
            active-text="使用中"
            inactive-text="库存">
          </el-switch>
        </el-col>
      </el-row>
      <el-row :gutter="20">
        <el-col :span="1"><div class="grid-content bg-purple">ID</div></el-col>
        <el-col :span="4"><div class="grid-content bg-purple">用户名</div></el-col>
        <el-col :span="4"><div class="grid-content bg-purple">硬件名称</div></el-col>
        <el-col :span="6"><div class="grid-content bg-purple">SN</div></el-col>
        <el-col :span="6"><div class="grid-content bg-purple">备注</div></el-col>
        <el-col :span="3"><div class="grid-content bg-purple">时间</div></el-col>
      </el-row>
      <el-row :gutter="20"  v-for="item in alluse">
        <el-col :span="1"><div class="grid-content bg-purple">{{ item[0]}}</div></el-col>
        <el-col :span="4"><div class="grid-content bg-purple">{{ item[1]}}</div></el-col>
        <el-col :span="4"><div class="grid-content bg-purple">{{ item[2]}}</div></el-col>
        <el-col :span="6"><div class="grid-content bg-purple">{{ item[3]}}</div></el-col>
        <el-col :span="6"><div class="grid-content bg-purple">{{ item[4]}}</div></el-col>
        <el-col :span="3"><div class="grid-content bg-purple">{{ item[5]}}</div></el-col>
      </el-row>
    </el-main>
    <el-footer>
      <div class="block">
        <el-pagination
          @size-change="handleSizeChange"
          @current-change="handleCurrentChange"
          :page-sizes="pagesizes"
          :page-size="pagesize"
          layout="total, sizes, prev, pager, next, jumper"
          :total="total">
        </el-pagination>
      </div>
    </el-footer>
  </el-container>
</template>
<script>
  import headerBar from 'bar/headerBar.vue'
  export default {
    data() {
      return {
        pagesize: '',
        pagesizes: [],
        total: '',
        display: '',
        value: true,
      }
    },
    methods: {
      handleSizeChange(val) {
        console.log(`每页 ${val} 条`);
      },
      handleCurrentChange(val) {
        console.log(`当前页: ${val}`);
      console.log(this.total,this.pagesizes)

      }
    },
    computed:{
      // pagesizes() {
      //   this.$store.getters.pagesizes
      // },
      // pagesize() {
      //   this.$store.getters.pagesize
      // },
      // total() {
      //   this.$store.getters.total
      // }
      alluse() {
        return this.$store.getters.alluse
      },
      search_show() {
        return this.$store.getters.search_show
      },
    },
    components: {
      headerBar,
    },
    beforeMount() {
      this.pagesizes = this.$store.getters.pagesizes
      this.pagesize = this.$store.getters.pagesize
      this.total = this.$store.getters.total
      this.$store.dispatch("GetAllUse").then(resp => {console.log(resp)}).catch(err => {console.log(err)})
    },
  }
</script>
<style>
  .el-row {
    margin-bottom: 20px;
    &:last-child {
      margin-bottom: 0;
    }
  }
  .el-col {
    border-radius: 4px;
  }
  .bg-purple {
    background: #d3dce6;
  }
  .grid-content {
    border-radius: 4px;
    min-height: 36px;
  }
  .el-select .el-input {
    width: 130px;
  }
  .input-with-select .el-input-group__prepend {
    background-color: #fff;
  }
</style>
